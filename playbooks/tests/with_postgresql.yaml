#  Copyright (c) 2019 Red Hat, Inc.
#
#  This file is part of ARA Records Ansible.
#
#  ARA is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  ARA is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with ARA.  If not, see <http://www.gnu.org/licenses/>.

- name: Test the ARA API with postgresql
  hosts: all
  gather_facts: yes
  vars:
    ara_tests_cleanup: true
    ara_api_root_dir: /tmp/ara-integration-tests
    ara_api_secret_key: testing
    ara_api_debug: true
    ara_api_log_level: DEBUG
    ara_api_database_engine: django.db.backends.postgresql
    ara_api_database_name: ara
    ara_api_database_user: ara
    ara_api_database_password: password
    ara_api_database_host: 127.0.0.1
    ara_api_database_port: 5432
  pre_tasks:
    - name: Set location of the git repository with Zuul
      set_fact:
        ara_api_source: "{{ ansible_user_dir }}/src/opendev.org/recordsansible/ara"
      when: zuul is defined

    - name: Set location of the git repository without Zuul
      set_fact:
        ara_api_source: "{{ lookup('pipe', 'git rev-parse --show-toplevel') }}"
      when: zuul is not defined

    - name: Start a postgresql container
      docker_container:
        name: ara_tests_postgresql
        image: postgres:10
        state: started
        ports:
          - "{{ ara_api_database_port }}:{{ ara_api_database_port }}"
        env:
          POSTGRES_DB: "{{ ara_api_database_name }}"
          POSTGRES_USER: "{{ ara_api_database_user }}"
          POSTGRES_PASSWORD: "{{ ara_api_database_password }}"
  tasks:
    - block:
        - name: Set up the API with the ara_api role
          include_role:
            name: ara_api
      always:
        - when: ara_tests_cleanup | bool
          block:
            - name: Clean up the postgresql container
              docker_container:
                name: ara_tests_postgresql
                state: absent

            - name: Clean up the test root
              file:
                path: "{{ ara_api_root_dir }}"
                state: absent
  post_tasks:
    # These are tasks rather than a standalone playbook to give us an easy
    # access to all the variables within the same play.
    - include_tasks: test_tasks.yaml
